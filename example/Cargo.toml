[package]
name = "example"
version = "0.16.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
pikav-client = { path = "../pikav-client", version = "0.16.0" }
actix-web = "4.3.1"
pikav-web = { path = "../pikav-web", features = ["leptos"] }
pikav-client = { path = "../pikav-client", optional = true }
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1.7"
console_log = "1.0.0"
cfg-if = "1.0.0"
leptos = { version = "0.3.0", default-features = false, features = [
  "serde",
] }
leptos_meta = { version = "0.3.0", default-features = false }
leptos_actix = { version = "0.3.0", optional = true }
leptos_router = { version = "0.3.0", default-features = false }
log = "0.4.17"
simple_logger = "4.1.0"
wasm-bindgen = "0.2.84"
serde = { version = "1.0.160", features = ["derive"] }
serde_json = { version = "1.0.96"}
sqlx = { version = "0.6.3", optional = true, features = [ "runtime-actix-rustls", "sqlite" ] }
rand = { version = "0.8.5", optional = true }
futures = { version = "0.3.28", optional = true }
reqwest = { version = "0.11.16", features = ["json"] }

[features]
default = []
hydrate = [
  "leptos/hydrate",
  "leptos_meta/hydrate",
  "leptos_router/hydrate",
  "pikav-web/leptos-hydrate"
]
ssr = [
  "dep:actix-files",
  "dep:actix-web",
  "dep:leptos_actix",
  "dep:sqlx",
  "dep:rand",
  "dep:futures",
  "dep:pikav-client",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr"
]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "example"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
